name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # Cache Gradle dependencies
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'TuneSync/gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    # Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 34
        target: android-34
        build-tools: 34.0.0
        cache: true

    # Grant execute permission for the Gradle wrapper
    - name: Make Gradle wrapper executable
      run: chmod +x TuneSync/gradlew

    # Change working directory to TuneSync for the following steps
    - name: Change working directory
      run: cd TuneSync

    # Run the tests and generate a report
    - name: Run Unit Tests and Generate Report
      working-directory: TuneSync
      run: ./gradlew test
    
    # Archive test reports as artifacts
    - name: Archive Test Reports
      if: always() 
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: TuneSync/build/reports/tests/testDebugUnitTest/

    # Run Lint to ensure code quality and generate a report
    - name: Run Lint
      working-directory: TuneSync
      run: ./gradlew lint

    # Archive Lint reports
    - name: Archive Lint Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: lint-report
        path: TuneSync/build/reports/lint/

    # Build the project
    - name: Build the project
      working-directory: TuneSync
      run: ./gradlew assembleDebug
